version: 2.1

orbs: 
    heroku: circleci/heroku@1.2.6

executors:
  go-executor: 
    docker:
      - image: cimg/go:1.19.0
    resource_class: small
  push-executor: 
    docker:
      - image: cimg/base:2022.08

# job definitions: 

jobs:
  build:
    executor: go-executor
    steps:
      - checkout
      - run: echo "Placholder job"
  
  code_coverage:
    executor: go-executor
    steps:
      - checkout
      - run: 
          name: "Set Directory"
          command: |
            cd cmd/web
      - run:
          name: "Create a temp directory for artifacts"
          command: |
            mkdir -p /tmp/artifacts
      - run:
          command: |
            go test -coverprofile=c.out
            go tool cover -html=c.out -o coverage.html
            mv coverage.html /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts 

  unit_testing: 
    executor: go-executor
    steps: 
      - checkout
      - run: 
          name: "create a folder for test results"
          command: | 
            mkdir -p /tmp/test-results
      - run: 
          name: "run unit tests and store results"
          command: |
            gotestsum --junitfile unit-tests.xml
            mv unit-tests.xml /tmp/test-results
      - store_test_results:
          path: /tmp/test-results         

  deploy: 
    executor: push-executor
    steps: 
      - checkout
      - setup_remote_docker
      - run: 
          name: Build and push to Docker Hub
          command: | 
            docker build -t tannerwride/whalewiki -t tannerwride/whalewiki:0.0.1 .
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER_ID" --password-stdin
            docker push $DOCKER_HUB_USER_ID/$IMAGE_NAME   
      - heroku/install
      - run:
          command: heroku container:login
          name: Login to Heroku Docker image registry
      - run:
          command: |+
            heroku container:push -a $HEROKU_APP_NAME \
             web

          name: Push Docker image to Heroku
          no_output_timeout: 10m
      - run:
          command: heroku container:login
          name: Login to Heroku Docker image registry
      - run:
          command: |
            heroku container:release -a $HEROKU_APP_NAME \
            web
          name: Release Docker image to Heroku
          no_output_timeout: 10m
      

workflows: 
  main_workflow:
      jobs:
        - build
        - code_coverage:
            requires: 
              - build
        - unit_testing:
            requires:
              - build
        - deploy:
            filters:
              branches:
                only: main
            requires: 
              - code_coverage
              - unit_testing
            context: 
              - docker_push
              - heroku_push
                